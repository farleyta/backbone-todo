var toDoApp=toDoApp||{};toDoApp.ToDo=Backbone.Model.extend({defaults:{title:"",isComplete:!1},toggle:function(){this.save({isComplete:!this.get("isComplete")})}}),toDoApp.ToDoList=Backbone.Collection.extend({model:toDoApp.ToDo,comparator:"orderNum",localStorage:new Backbone.LocalStorage("backbone-todo"),getCompleted:function(){return this.where({isComplete:!0})},getRemaining:function(){return this.where({isComplete:!1})},nextOrderNum:function(){return this.length<1?1:this.max(function(toDoModel){return toDoModel.get("orderNum")}).get("orderNum")+1}}),toDoApp.todoList=new toDoApp.ToDoList,toDoApp.AppView=Backbone.View.extend({el:"#todoapp",statsTemplate:_.template($("#stats-template").html()),initialize:function(){this.todoList=toDoApp.todoList,this.$allCheckbox=this.$("#toggle-all")[0],this.$listOfTodos=this.$("#todo-list"),this.$input=this.$("#new-todo"),this.$footer=this.$("#footer"),this.$main=this.$("#main"),this.listenTo(this.todoList,"add",this.addToDo),this.listenTo(this.todoList,"reset",this.addAllToDos),this.listenTo(this.todoList,"change:isComplete",this.triggerVisible),this.listenTo(this.todoList,"filterVisible",this.triggerAllVisible),this.listenTo(this.todoList,"all",this.render),this.todoList.fetch()},events:{"keypress #new-todo":"createOnEnter","click #clear-completed":"clearCompleted","click #toggle-all":"toggleAllCompleteStatus"},addToDo:function(toDoModel){var toDoView=new toDoApp.ToDoView({model:toDoModel});$("#todo-list").append(toDoView.render().el)},addAllToDos:function(allToDos){this.$listOfTodos.html(""),allToDos.each(this.addToDo,this)},clearCompleted:function(){return _.invoke(this.todoList.getCompleted(),"destroy"),!1},createOnEnter:function(e){13===e.which&&this.$input.val().trim()&&(this.todoList.create(this.newToDoAttrs()),this.$input.val(""))},newToDoAttrs:function(){return{title:this.$input.val(),orderNum:this.todoList.nextOrderNum(),isComplete:!1}},render:function(){var numCompleted=this.todoList.getCompleted().length,numRemaining=this.todoList.getRemaining().length;this.todoList.length?(this.$main.show(),this.$footer.show(),this.$footer.html(this.statsTemplate({numCompleted:numCompleted,numRemaining:numRemaining}))):(this.$main.hide(),this.$footer.hide()),numRemaining||(this.$allCheckbox.checked=!0)},toggleAllCompleteStatus:function(){var isComplete=this.$allCheckbox.checked;this.todoList.each(function(toDoModel){toDoModel.save({isComplete:isComplete})})},triggerVisible:function(toDoModel){toDoModel.trigger("visible")},triggerAllVisible:function(){this.todoList.each(this.triggerVisible,this)}}),toDoApp.ToDoView=Backbone.View.extend({tagName:"li",template:_.template($("#item-template").html()),events:{"dblclick label":"edit","keypress .edit":"updateOnEnter","blur .edit":"close","click .toggle":"toggleCompleted"},initialize:function(){this.listenTo(this.model,"change",this.render)},render:function(){return this.$el.html(this.template(this.model.toJSON())),this.$input=this.$(".edit"),this.$el.toggleClass("completed",this.model.get("isComplete")),this},close:function(){var title=this.$input.val().trim();title&&this.model.save({title:title}),this.$el.removeClass("editing")},edit:function(){this.$el.addClass("editing"),this.$input.val(this.model.get("title")).focus()},toggleCompleted:function(){this.model.toggle()},updateOnEnter:function(e){13===e.which&&this.close()}}),$(function(){new toDoApp.AppView});